---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: pipelines.tinkerbell.org
spec:
  group: tinkerbell.org
  names:
    categories:
    - tinkerbell
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    shortNames:
    - pl
    singular: pipeline
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Hardware that corresponds to the current Agent and Workflow
      jsonPath: .status.currentHardware
      name: Hardware
      type: string
    - description: Workflow that is currently be run by the associated Agent
      jsonPath: .status.CurrentWorkflow
      name: Workflow
      type: string
    - description: ID of the Agent that is running the current Workflow
      jsonPath: .status.CurrentAgent
      name: AgentID
      type: string
    - description: Overall state of the Pipeline such as Pending,Running etc
      jsonPath: .status.state
      name: State
      type: string
    - description: Action that is currently being executed
      jsonPath: .status.currentAction
      name: Action
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          Pipeline describes a set of Workflows to be run by corresponding Agents. Workflows in the Pipeline are execute sequentially. Each Workflow executes until it succeeds or fails.
          A failed Worfklow will stop the Pipeline from executing further Workflows.
          The Pipeline is considered successful if all Workflows succeed. The Pipeline is considered failed if any Workflow fails.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              bootOptions:
                description: BootOptions are options that control the booting of Hardware
                  for all Workflows. A HardwareRef in each Workflow must be provided
                  to use BootOptions.
                properties:
                  bootMode:
                    description: BootMode is the type of booting that will be done.
                      One of "netboot" or "isoboot".
                    enum:
                    - netboot
                    - isoboot
                    type: string
                  isoURL:
                    description: |-
                      ISOURL is the URL of the ISO that will be one-time booted. When this field is set, the controller will create a job.bmc.tinkerbell.org object
                      for getting the associated hardware into a CDROM booting state. A HardwareRef that contains a spec.BmcRef must be provided. If BootMode is set
                      to "isoboot", and this field is not set, a hardwareRef is required with the spec.OSIE.ISOURL field specified.
                    format: url
                    type: string
                  toggleAllowNetboot:
                    description: |-
                      ToggleAllowNetboot indicates whether the controller should toggle the field in the associated hardware for allowing PXE booting.
                      This will be enabled before a Workflow is executed and disabled after the Workflow has completed successfully.
                      A HardwareRef must be provided.
                    type: boolean
                type: object
              templateParams:
                additionalProperties:
                  type: string
                description: |-
                  TemplateParams are a list of key-value pairs that are injected into all Workflows at render
                  time. TemplateParams are exposed to Workflows using a top level .Params key.

                  For example, TemplateParams = {"foo": "bar"}, the foo key can be accessed in a Workflow via .Params.foo.
                type: object
              timeout:
                default: 0
                description: |-
                  TimeoutSeconds defines the time the Pipeline has to complete. The timer begins when the first
                  Action of the first Workflow is requested. When set to 0, no timeout is applied.
                format: int64
                minimum: 0
                type: integer
              workflows:
                description: Workflows are a list of workflows to be executed
                items:
                  properties:
                    agentId:
                      description: AgentID is a unique identifier of the Agent that
                        will execute the Workflow.
                      type: string
                    bootOptions:
                      description: BootOptions are options that control the booting
                        of Hardware. A HardwareRef must be provided to use BootOptions.
                      properties:
                        bootMode:
                          description: BootMode is the type of booting that will be
                            done. One of "netboot" or "isoboot".
                          enum:
                          - netboot
                          - isoboot
                          type: string
                        isoURL:
                          description: |-
                            ISOURL is the URL of the ISO that will be one-time booted. When this field is set, the controller will create a job.bmc.tinkerbell.org object
                            for getting the associated hardware into a CDROM booting state. A HardwareRef that contains a spec.BmcRef must be provided. If BootMode is set
                            to "isoboot", and this field is not set, a hardwareRef is required with the spec.OSIE.ISOURL field specified.
                          format: url
                          type: string
                        toggleAllowNetboot:
                          description: |-
                            ToggleAllowNetboot indicates whether the controller should toggle the field in the associated hardware for allowing PXE booting.
                            This will be enabled before a Workflow is executed and disabled after the Workflow has completed successfully.
                            A HardwareRef must be provided.
                          type: boolean
                      type: object
                    hardwareRef:
                      description: HardwareRef is a reference to a Hardware resource
                        this workflow will execute on.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    templateParams:
                      additionalProperties:
                        type: string
                      description: |-
                        TemplateParams are a list of key-value pairs that are injected into Workflows at render
                        time. TemplateParams are exposed to Workflow using a top level .Params key.

                        For example, TemplateParams = {"foo": "bar"}, the foo key can be accessed via .Params.foo.
                      type: object
                    timeout:
                      default: 0
                      description: |-
                        TimeoutSeconds defines the time the workflow has to complete. The timer begins when the first
                        action is requested. When set to 0, no timeout is applied.
                      format: int64
                      minimum: 0
                      type: integer
                    workflowRef:
                      description: WorkflowRef is a reference to a Workflow resource
                        used to render Workflow actions.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - agentId
                  - workflowRef
                  type: object
                type: array
            type: object
          status:
            properties:
              actions:
                description: Workflows is a list of action states.
                items:
                  description: ActionStatus describes status information about an
                    action.
                  properties:
                    agentID:
                      description: AgentID is the ID of the Agent that will execute
                        the Action.
                      type: string
                    failureMessage:
                      description: |-
                        FailureMessage is a free-form user friendly message describing why the Action entered the
                        ActionStateFailed state. Typically, this is an elaboration on the Reason.
                      type: string
                    failureReason:
                      description: |-
                        FailureReason is a short CamelCase word or phrase describing why the Action entered
                        ActionStateFailed.
                      type: string
                    id:
                      description: ID uniquely identifies the action status.
                      type: string
                    lastTransitioned:
                      description: LastTransition is the observed time when State
                        transitioned last.
                      format: date-time
                      type: string
                    rendered:
                      description: Rendered is the rendered action.
                      properties:
                        args:
                          description: Args are a set of arguments to be passed to
                            the command executed by the container on launch.
                          items:
                            type: string
                          type: array
                        background:
                          description: Background true will run the container in the
                            background or as some runtimes call it detached mode.
                            When set to true, the Agent will immediately report the
                            Action as having succeeded.
                          type: boolean
                        cmd:
                          description: |-
                            Cmd defines the command to use when launching the image. It overrides the default command
                            defined in the Image.
                          type: string
                        env:
                          additionalProperties:
                            type: string
                          description: Env defines environment variables used when
                            launching the container.
                          type: object
                        image:
                          description: Image is fully qualified OCI image name.
                          type: string
                        name:
                          description: Name is a name for the Action.
                          type: string
                        namespaces:
                          description: Namespace defines the Linux namespaces this
                            container should execute in.
                          properties:
                            network:
                              description: Network defines the network namespace.
                              type: string
                            pid:
                              description: PID defines the PID namespace
                              type: string
                          type: object
                        retries:
                          description: Retries defines the number of times the Agent
                            will retry the Action if it fails, not including Timeouts.
                            Retries are only attempted on non-zero exit codes.
                          format: int32
                          type: integer
                        timeout:
                          default: 0
                          description: |-
                            TimeoutSeconds defines the time the Action has to complete. The timer begins when the action is requested.
                            When set to 0, no timeout is applied.
                          format: int64
                          minimum: 0
                          type: integer
                        volumes:
                          description: Volumes defines the volumes to mount into the
                            container.
                          items:
                            description: "Volume is a specification for mounting a
                              volume in an Action. Volumes take the form\n{SRC-VOLUME-NAME
                              | SRC-HOST-DIR}:TGT-CONTAINER-DIR:OPTIONS. When specifying
                              a VOLUME-NAME that\ndoes not exist it will be created
                              for you. Examples:\n\nRead-only bind mount bound to
                              /data\n\n\t/etc/data:/data:ro\n\nWritable volume name
                              bound to /data\n\n\tshared_volume:/data\n\nSee https://docs.docker.com/storage/volumes/
                              for additional details."
                            type: string
                          type: array
                      required:
                      - image
                      - name
                      type: object
                    startedAt:
                      description: |-
                        StartedAt is the time the action was started as reported by the client. Nil indicates the
                        Action has not started.
                      format: date-time
                      type: string
                    state:
                      description: State describes the current state of the action.
                      type: string
                    workflowID:
                      description: WorkflowID is the ID of the Workflow that the Actions
                        belongs to.
                      type: string
                  required:
                  - agentID
                  - id
                  - workflowID
                  type: object
                type: array
              bootOptions:
                additionalProperties:
                  description: BootOptionsStatus holds the state of any boot options.
                  properties:
                    allowNetboot:
                      description: AllowNetboot holds the state of the the controller's
                        interactions with the allowPXE field in a Hardware object.
                      properties:
                        toggledFalse:
                          type: boolean
                        toggledTrue:
                          type: boolean
                      type: object
                    jobs:
                      additionalProperties:
                        description: JobStatus holds the state of a specific job.bmc.tinkerbell.org
                          object created.
                        properties:
                          complete:
                            description: Complete indicates whether the created job.bmc.tinkerbell.org
                              has reported its conditions as complete.
                            type: boolean
                          existingJobDeleted:
                            description: |-
                              ExistingJobDeleted indicates whether any existing job.bmc.tinkerbell.org was deleted.
                              The name of each job.bmc.tinkerbell.org object created by the controller is the same, so only one can exist at a time.
                              Using the same name was chosen so that there is only ever 1 job.bmc.tinkerbell.org per Hardware/Machine.bmc.tinkerbell.org.
                              This makes clean up easier and we dont just orphan jobs every time.
                            type: boolean
                          uid:
                            description: |-
                              UID is the UID of the job.bmc.tinkerbell.org object associated with this workflow.
                              This is used to uniquely identify the job.bmc.tinkerbell.org object, as
                              all objects for a specific Hardware/Machine.bmc.tinkerbell.org are created with the same name.
                            type: string
                        type: object
                      description: Jobs holds the state of any job.bmc.tinkerbell.org
                        objects created.
                      type: object
                  type: object
                description: 'BootOptions holds the state of any boot options. TODO(jacobweinstock):
                  this should probably map to each workflow.'
                type: object
              conditions:
                description: Conditions details a set of observations about the Workflow.
                items:
                  description: |-
                    Condition defines an observation on a resource that is generally attainable by inspecting
                    other status fields.
                  properties:
                    lastTransitionTime:
                      description: LastTransition is the last time the condition transitioned
                        from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the last transition.
                      type: string
                    reason:
                      description: Reason is a short CamelCase description for the
                        conditions last transition.
                      type: string
                    status:
                      description: Status of the condition.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              currentAction:
                description: CurrentAction is the action that is currently in the
                  running state.
                type: string
              currentAgent:
                description: CurrentAgent is the agent that is currently being used.
                type: string
              currentHardware:
                description: CurrentHardware is the hardware that is currently being
                  used.
                type: string
              currentWorkflow:
                description: CurrentWorkflow is the workflow that is currently in
                  the running state.
                type: string
              lastTransitioned:
                description: LastTransition is the observed time when State transitioned
                  last.
                format: date-time
                type: string
              startedAt:
                description: |-
                  StartedAt is the time the first action was requested. Nil indicates the Workflow has not
                  started.
                format: date-time
                type: string
              state:
                description: State describes the current state of the Pipeline.
                type: string
              workflowRending:
                description: |-
                  WorkflowRendering indicates whether the Workflow was rendered successfully.
                  Possible values are "succeeded" or "failed" or "unknown".
                type: string
            required:
            - actions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
